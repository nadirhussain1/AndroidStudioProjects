buildscript {
    repositories {
        jcenter()
        mavenLocal()

        maven { url 'http://repo.pageturner-reader.org' }
        maven { url 'http://acra.googlecode.com/svn/repository/releases' }

        mavenCentral()

        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }

    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'me.tatarka:gradle-retrolambda:2.4.0'
        classpath 'com.google.gms:google-services:3.0.0'
    }
}

apply plugin: 'com.android.application' //or apply plugin: 'java'
apply plugin: 'retrolambda'
apply plugin: 'idea'

repositories {
    jcenter()
    mavenLocal()

    maven { url 'http://repo.pageturner-reader.org' }
    maven { url 'http://acra.googlecode.com/svn/repository/releases' }

    mavenCentral()

    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }

}

dependencies {
    compile 'com.google.firebase:firebase-core:9.4.0'
    compile "com.google.firebase:firebase-auth:9.4.0"
    compile 'com.google.firebase:firebase-database:9.4.0'

    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.android.support:design:22.2.0'
    compile 'com.android.support:cardview-v7:22.0.+'
    compile 'com.android.support:recyclerview-v7:22.0.+'
    compile(
            [group: 'com.google.code.findbugs', name: 'jsr305', version: '1.3.9'],
            [group: 'org.slf4j', name: 'slf4j-android', version: '1.6.1-RC1'],
            [group: 'org.codehaus.jedi', name: 'jedi-core', version: '3.0.5']
    )
    compile('net.nightwhistler.htmlspanner:htmlspanner:0.5-SNAPSHOT') {
        exclude module: 'ant'
        exclude module: 'commons-io'
    }

    compile('nl.siegmann.epublib:epublib-core:3.1') {
        exclude group: 'xmlpull'
        exclude group: 'org.slf4j'
        exclude group: 'net.sf.kxml'
    }
    compile 'com.parse:parse-android:1.10.1'
    provided(
            [group: 'com.google.android', name: 'annotations', version: '4.1.1.4'],
            [group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1']
    )

    compile 'com.parse.bolts:bolts-android:1.+'
    compile 'com.parse:parse-android:1.+'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile project(':ParseLoginUI')
    compile 'com.amazonaws:aws-android-sdk-core:2.+'
    compile 'com.amazonaws:aws-android-sdk-cognito:2.+'
    compile 'com.amazonaws:aws-android-sdk-s3:2.+'

}

idea {
    module {
        downloadSources = true
    }
}

android {
    buildToolsVersion "22.0.0"
    compileSdkVersion 22
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        //testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
        minSdkVersion 16

        targetSdkVersion 22
        applicationId "com.ebooksPatagonia.Patagonia"
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']

            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']

            renderscript.srcDirs = ['src']

            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }



    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        abortOnError false
    }
    signingConfigs {
        release {
            if (System.getenv("KEYSTORE")) {
                storeFile file(System.getenv("KEYSTORE"))
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("KEY_PASSWORD")
            }
        }
    }
    buildTypes {
        release {
            if (System.getenv("KEYSTORE")) {
                signingConfig signingConfigs.release
            }
        }
    }
    productFlavors {
    }
}

retrolambda {
    javaVersion JavaVersion.VERSION_1_6

}



apply plugin: 'sonar-runner'

sonarRunner {
    sonarProperties {
        property "sonar.sourceEncoding", "UTF-8"
//        property "sonar.profile", "Android Lint"
        property "sonar.sources", "src"
        property "sonar.binaries", file("${project.buildDir}/intermediates/classes/debug") 
        // property "sonar.libraries", "android.sourceSets.main.runtimeClasspath"
    }
}
apply plugin: 'com.google.gms.google-services'

